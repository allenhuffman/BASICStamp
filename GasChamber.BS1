' =========================================================================
'
'   File....... Sequencer.BS1
'   Purpose.... Sequencer Engine for Props
'   Author..... Jon Williams -- Parallax, Inc.
'   E-mail..... jwilliams@parallax.com
'   Started....
'   Updated.... 07 JUN 2005
'
'   {$STAMP BS1}
'   {$PBASIC 1.0}
'
' =========================================================================


' -----[ Program Description ]---------------------------------------------


' -----[ Revision History ]------------------------------------------------


' -----[ I/O Definitions ]-------------------------------------------------

SYMBOL  Trigger1         = PIN7                  ' from trigger device
SYMBOL  Trigger2         = PIN6
SYMBOL  Sio              = 5                     ' to RC4
SYMBOL  Baud  = OT2400
SYMBOL  Addr  = %11
SYMBOL  Light            = 1
SYMBOL  Fogger           = 4
' -----[ Constants ]-------------------------------------------------------

SYMBOL  Yes             = 1                     ' for active-high input
SYMBOL  No              = 0
SYMBOL  On              = 1
SYMBOL  Off             = 0
SYMBOL  DelayRes        = 120                   ' 100 ms delay resolution
SYMBOL  ResetDelay      = 10000                  ' 10 sec reset

' -----[ Variables ]-------------------------------------------------------

SYMBOL  pntr            = B0                    ' record pointer
SYMBOL  ctrl            = B1                    ' control outputs
SYMBOL  timer           = B2                    ' step timer ( x DelayRes )

' -----[ EEPROM Data ]-----------------------------------------------------

' Sequence Database
' -- each entry has two bytes: outputs, timing (1 - 255 units x DelayRes)

ZigZag:
  EEPROM (%00000001, 1)
  EEPROM (%00000000, 4)
  EEPROM (%00000001, 1)
  EEPROM (%00000000, 3)
  EEPROM (%00000001, 1)
  EEPROM (%00000000, 3)
  EEPROM (%00000001, 1)
  EEPROM (%00000000, 4)
  EEPROM (%00000001, 1)
  EEPROM (%00000000, 3)
  EEPROM (%00000001, 1)
  EEPROM (%00000000, 4)
  EEPROM (%00000001, 1)
  EEPROM (%00000000, 2)
  EEPROM (%00000001, 1)
  EEPROM (%00000000, 3)
  EEPROM (%00000001, 1)
  EEPROM (%00000000, 4)
  EEPROM (%00000001, 1)
  EEPROM (%00000000, 5)
  EEPROM (%00000001, 1)
  EEPROM (%00000000, 6)
  EEPROM (%00000001, 1)
  EEPROM (%00000000, 7)
  EEPROM (%00000001, 1)
  EEPROM (%00000000, 8)
  EEPROM (%00000001, 1)
  EEPROM (%00000000, 10)
  EEPROM (%00000010, 40)
  EEPROM (%00000011, 2 )
  EEPROM (%00000000, 0)                         ' end of sequence

' -----[ Initialization ]--------------------------------------------------

Reset:
  DIRS = %00001111                              ' P0 - P6 are outputs

' -----[ Program Code ]----------------------------------------------------

Main:
  IF Trigger1 = Yes THEN Start                     ' wait for trigger
  IF Trigger2 = Yes THEN MotionStart
  GOTO Main

MotionStart:
Start:
  GOSUB LightOn
  pntr = 0                                      ' reset record pointer

Get_Record:
  READ pntr, ctrl                               ' read outputs
  pntr = pntr + 1                               ' point to timing byte
  READ pntr, timer                              ' read timing byte
  pntr = pntr + 1                               ' point to next record
  IF timer = 0 THEN Stop                        ' test for end

Update_Outputs:
  PINS = ctrl                                   ' refresh output pins

Delay:
  PAUSE DelayRes                                ' wait
  timer = timer - 1                             ' update timer
  IF timer = 0 THEN Get_Record                  ' expired?
  IF Trigger1 = Yes THEN Stop                   ' button kill switch
  GOTO Delay                                    ' -- no, keep timing

Stop:
  PINS = %00000000
  GOSUB LightOff
  PAUSE ResetDelay
WaitHere:
  IF Trigger1 = Yes THEN WaitHere
  GOTO Main

LightOn:
  SEROUT  Sio, Baud, ("!RC4", Addr, "R", Light, On )
  RETURN
LightOff:
  SEROUT  Sio, Baud, ("!RC4", Addr, "R", Light, Off )
  RETURN

  END


' -----[ Subroutines ]-----------------------------------------------------