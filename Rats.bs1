' =========================================================================
'
'   File....... Sequencer.BS1
'   Purpose.... Sequencer Engine for Props
'   Author..... Jon Williams -- Parallax, Inc.
'   E-mail..... jwilliams@parallax.com
'   Started....
'   Updated.... 07 JUN 2005
'
'   {$STAMP BS1}
'   {$PBASIC 1.0}
'
' =========================================================================


' -----[ Program Description ]---------------------------------------------


' -----[ Revision History ]------------------------------------------------


' -----[ I/O Definitions ]-------------------------------------------------

SYMBOL  Trigger1         = PIN7                 ' from trigger device
SYMBOL  Trigger2         = PIN6

' -----[ Constants ]-------------------------------------------------------

SYMBOL  Yes             = 1                     ' for active-high input
SYMBOL  No              = 0

SYMBOL  Pushed          = 0
SYMBOL  NotPushed       = 1

SYMBOL  DelayRes        = 100                   ' 100 ms delay resolution

' -----[ Variables ]-------------------------------------------------------

SYMBOL  rat1            = B0
SYMBOL  rat1counter     = B1
SYMBOL  rat2            = B2
SYMBOL  rat2counter     = B3

' -----[ EEPROM Data ]-----------------------------------------------------

' -----[ Initialization ]--------------------------------------------------

Reset:
  DIRS = %00111111                              ' P0 - P5 are outputs

' -----[ Program Code ]----------------------------------------------------

Main:
  IF Trigger1 = Pushed THEN Start1                     ' wait for trigger
  IF Trigger2 = Pushed THEN Start2
  GOTO Main

Start1:
  IF rat1 = Yes THEN Process1
  ' Begin rat1 progress
  rat1 = Yes
  rat1progress = 0

Start2:
  Get_Record:
  READ pntr, ctrl                               ' read outputs
  pntr = pntr + 1                               ' point to timing byte
  READ pntr, timer                              ' read timing byte
  pntr = pntr + 1                               ' point to next record
  IF timer = 0 THEN Main                        ' test for end

Update_Outputs:
  PINS = ctrl                                   ' refresh output pins

Delay:
  PAUSE DelayRes                                ' wait
  timer = timer - 1                             ' update timer
  IF timer = 0 THEN Get_Record                  ' expired?
  GOTO Delay                                    ' -- no, keep timing

  END


' -----[ Subroutines ]-----------------------------------------------------